[workspace]
members = [
  "math/algebra",
  "math/geometry",
  "math/statistics",
  "utils/incremental",
  "utils/incremental-derive",
  "utils/reactive",
  "utils/reactive-incremental",
  "utils/arena",
  "utils/dyn-downcast",
  "utils/arena-graph",
  "utils/tree",
  "utils/storage",
  "utils/abstract-tree",
  "utils/abstract-graph",
  "utils/heap-tools",
  "utils/interning",
  "utils/fast-hash-collection",
  "components/animation",
  "components/color",
  "components/controller",
  "components/mesh/core",
  "components/mesh/generator",
  "components/mesh/simplification",
  "components/mesh/gpu-system",
  "components/mesh/segmentation",
  "components/texture/core",
  "components/texture/types",
  "components/texture/packer",
  "components/texture/gpu-base",
  "components/texture/gpu-process",
  "components/texture/gpu-system",
  "components/texture/generative",
  "components/lighting/core",
  "components/lighting/ltc",
  "components/lighting/ibl/core",
  "components/lighting/ibl/cli",
  "components/lighting/ibl/gpu",
  "components/lighting/transport",
  "components/space",
  "components/fontext",
  "components/canvas/core",
  "components/canvas/gpu",
  "interphaser",
  "shader/api",
  "shader/derive",
  "shader/backends/naga",
  "shader/library",
  "scene/core",
  "scene/webgpu",
  "scene/optimization",
  "scene/raytracing",
  "scene/interaction",
  "scene/io/obj/loader",
  "scene/io/gltf/loader",
  "scene/io/gltf/exporter",
  "viewer",
  "platform/graphics/webgpu",
  "platform/graphics/vulkan",
]

# https://doc.rust-lang.org/nightly/cargo/reference/features.html#feature-resolver-version-2
resolver = "2"

# https://rust-lang.github.io/rfcs/2906-cargo-workspace-deduplicate.html
[workspace.dependencies]
rayon = "1.7.0"
bitflags = "2.2"
bytemuck = { version = "1.4.1", features = ["derive"] }
dyn-clone = "1.0.5"
dashmap = { version = "5.5.3", features = ["rayon"] }
futures = "0.3.25"
log = "0.4"
once_cell = "1.4.0"
paste = "1.0.2"
pin-project = "1.0.12"
smallvec = "1.9.0"
winit = "0.27.1"
derivative = "2.2.0"
proc-macro2 = "1.0.4"
quote = "1.0.2"
syn = { version = "1.0.11", features = ["full"] }
tracing = "0.1"
rand = "0.8.5"

# https://doc.rust-lang.org/cargo/reference/profiles.html

# currently our implementation not provide panic safety and panic recovery
# and also enable unwind is bad for performance

[profile.dev]
panic = "abort"

[profile.release]
panic = "abort"

# used when you are profiling in release but want debug symbol enabled
[profile.profiling]
debug = true
inherits = "release"

# [patch.crates-io]
# naga = { path = "../references/naga" }

# https://github.com/rust-lang/rfcs/blob/master/text/3389-manifest-lint.md
[workspace.lints.clippy]

# we don't care the performance win if the Arc could be replaced by Rc
arc_with_non_send_sync = "allow"
type_complexity = "allow"
too_many_arguments = "allow"
# we may copy code from f64 codebase to f32 type, f32 may upgrate to f64 in future
excessive_precision = "allow"


[workspace.lints.rust]
# we trust incomplete rust feature than unsafe workaround
incomplete_features = "allow"
